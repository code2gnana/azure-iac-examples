{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located including a trailing '/'"
			},
			"defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/301-aks-private-endpoint-firewall/"
		},
		"artifactsLocationSasToken": {
			"type": "string",
			"metadata": {
				"description": "The sasToken required to access artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
			},
			"defaultValue": ""
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "deployment location"
			}
		},
		"deployGateway": {
			"type": "bool",
			"defaultValue": false
		},
		"deploymentMode": {
			"type": "string",
			"allowedValues": [
				"Incremental",
				"Complete"
			],
			"defaultValue": "Incremental",
			"metadata": {
				"description": "ARM deployment mode"
			}
		},
		"tags": {
			"type": "object",
			"metadata": {
				"description": "resource tags"
			}
		},
		"vNets": {
			"type": "array",
			"metadata": {
				"description": "custom vNet JSON"
			}
		},
		"aksVersion": {
			"type": "string",
			"metadata": {
				"description": "Kubernetes version"
			}
		},
		"aksNodeVmSize": {
			"type": "string",
			"defaultValue": "Standard_D2_v2",
			"metadata": {
				"description": "AKS node VM size"
			}
		},
		"aksNodeCount": {
			"type": "int",
			"defaultValue": 1,
			"metadata": {
				"description": "AKS node count"
			}
		},
		"aksMaxPodCount": {
			"type": "int",
			"defaultValue": 50,
			"metadata": {
				"description": "AKS max pod count per worker node"
			}
		},
		"sshPublicKey": {
			"type": "string",
			"metadata": {
				"description": "AKS nodes SSH Key"
			}
		},
		"dbAdminPassword": {
			"type": "string",
			"metadata": {
				"description": "SQL DB server admin password"
			}
		},
		"aadAdminGroupObjectIds": {
			"type": "array",
			"metadata": {
				"description": "Array of AAD principal ObjectIds"
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "admin user name for Linux jump box VM"
			}
		}
	},
	"variables": {
		"suffix": "[substring(uniqueString(subscription().subscriptionId, uniqueString(resourceGroup().id)), 0, 6)]",
		"separatedAddressprefix": "[split(parameters('vNets')[0].subnets[0].addressPrefix,'.')]",
		"firewallPrivateIpAddress": "[concat(variables('separatedAddressprefix')[0], '.', variables('separatedAddressprefix')[1],'.',variables('separatedAddressprefix')[2], '.4')]",
		"udrNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/udr.json', parameters('artifactsLocationSasToken')))]",
		"vnetNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/vnets.json', parameters('artifactsLocationSasToken')))]",
		"peeringNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/peering.json', parameters('artifactsLocationSasToken')))]",
		"vmNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/vm.json', parameters('artifactsLocationSasToken')))]",
		"firewallNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/firewall.json', parameters('artifactsLocationSasToken')))]",
		"aksNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/aks.json', parameters('artifactsLocationSasToken')))]",
		"sqldbNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/sql.json', parameters('artifactsLocationSasToken')))]",
		"sqlPrivateDnsZoneName": "[concat('privatelink', environment().suffixes.sqlServerHostname)]",
		"privateDnsLinkNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/private-dns-link.json', parameters('artifactsLocationSasToken')))]",
		"appGwyNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/appgwy.json', parameters('artifactsLocationSasToken')))]",
		"privateLinkNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/private_link.json', parameters('artifactsLocationSasToken')))]",
		"privateDnsNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/private_dns.json', parameters('artifactsLocationSasToken')))]",
		"privateDnsRecordNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/dns_record.json', parameters('artifactsLocationSasToken')))]",
		"privateLinkIpConfigsNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/private_link_ipconfigs.json', parameters('artifactsLocationSasToken')))]",
		"privateLinkIpConfigsHelperNestedTemplateUri": "[uri(parameters('artifactsLocation'), concat('nestedtemplates/private_link_ipconfigs_helper.json', parameters('artifactsLocationSasToken')))]",
		"sqlGroupType": "sqlServer", // valid values: 'sqlServer'
		"workspaceName": "[concat('wks-', variables('suffix'))]"
	},
	"resources": [
		{
			"name": "[variables('workspaceName')]",
			"type": "Microsoft.OperationalInsights/workspaces",
			"apiVersion": "2020-03-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"sku": {
					"name": "Standalone"
				},
				"retentionInDays": 30
			}
		},
		{
			"comments": "This deployment links to the udr.json nested ARM template",
			"name": "linkedTemplate-udr",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('udrNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"azureFirewallPrivateIpAddress": {
						"value": "[variables('firewallPrivateIpAddress')]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the vnets.json nested ARM template",
			"name": "[concat('linkedTemplate-vnet', '-', copyIndex())]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'linkedTemplate-udr')]"
			],
			"condition": true,
			"resourceGroup": "[resourceGroup().name]",
			"copy": {
				"name": "vnetCopy",
				"count": "[length(parameters('vNets'))]"
			},
			"properties": {
				"mode": "[parameters('deploymentMode')]",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('vnetNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"vNet": {
						"value": "[parameters('vNets')[copyIndex()]]"
					},
					"tags": {
						"value": "[parameters('tags')]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the peering.json nested ARM template",
			"name": "linkedTemplate-peering",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"dependsOn": [
				"vnetCopy"
			],
			"resourceGroup": "[resourceGroup().name]",
			"properties": {
				"mode": "[parameters('deploymentMode')]",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('peeringNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"vNets": {
						"value": "[parameters('vNets')]"
					},
					"isGatewayDeployed": {
						"value": false
					}
				}
			}
		},
		{
			"comments": "This deployment links to the vm.json nested ARM template",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "linkedTemplate-vm",
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'linkedTemplate-peering')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('vmNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"vmName": {
						"value": "jump-box-vm"
					},
					"adminUsername": {
						"value": "[parameters('adminUsername')]"
					},
					"authenticationType": {
						"value": "sshPublicKey"
					},
					"adminPasswordOrKey": {
						"value": "[parameters('sshPublicKey')]"
					},
					"ubuntuOSVersion": {
						"value": "18.04-LTS"
					},
					"VmSize": {
						"value": "Standard_B2s"
					},
					"subnetRef": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-vnet-0').outputs.subnetRefs.value[1].id]"
					},
					"customData": {
						"value": "[concat('#include\n', concat(parameters('artifactsLocation'), '/', 'cloudinit.txt', parameters('artifactsLocationSasToken')))]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the firewall.json nested ARM template",
			"name": "linkedTemplate-firewall",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'linkedTemplate-vm')]"
			],
			"resourceGroup": "[resourceGroup().name]",
			"properties": {
				"mode": "[parameters('deploymentMode')]",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('firewallNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"firewallSubnetRef": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-vnet-0').outputs.subnetRefs.value[0].id]"
					},
					"sourceAddressRangePrefixes": {
						"value": "[union(reference('Microsoft.Resources/deployments/linkedTemplate-vnet-0').outputs.subnetRefs.value, reference('Microsoft.Resources/deployments/linkedTemplate-vnet-1').outputs.subnetRefs.value)]"
					},
					"vmPrivateIp": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-vm').outputs.vmPrivateIp.value]"
					},
					"workspaceRef": {
						"value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the aks.json nested ARM template",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "linkedTemplate-aks",
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'linkedTemplate-firewall')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('aksNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"aksVersion": {
						"value": "[parameters('aksVersion')]"
					},
					"aksSubnetRef": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-vnet-1').outputs.subnetRefs.value[0].id]"
					},
					"appGwySubnetPrefix": {
						"value": "10.1.2.0/24"
					},
					"aksNodeVmSize": {
						"value": "[parameters('aksNodeVmSize')]"
					},
					"aksNodeCount": {
						"value": "[parameters('aksNodeCount')]"
					},
					"maxPods": {
						"value": "[parameters('aksMaxPodCount')]"
					},
					"aadAdminGroupObjectIdList": {
						"value": "[parameters('aadAdminGroupObjectIds')]"
					},
					"workspaceRef": {
						"value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the private-dns-link.json nested ARM template",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "linkedTemplate-privateDnsLink",
			"resourceGroup": "[concat('MC_', resourceGroup().name, '_', 'aks', '-', variables('suffix'), '_', resourceGroup().location)]",
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'linkedTemplate-aks')]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('privateDnsLinkNestedTemplateUri')]"
				},
				"parameters": {
					"privateDnsName": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-aks').outputs.aksControlPlanePrivateFQDN.value]"
					},
					"vnetName": {
						"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-vnet-0').outputs.vnetName.value]"
					},
					"vnetResourceGroupName": {
						"value": "[resourceGroup().name]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the sql.json nested ARM template",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2020-07-01",
			"name": "linkedTemplate-sqldb",
			"condition": true,
			"dependsOn": [
				"vnetCopy"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('sqldbNestedTemplateUri')]"
				},
				"parameters": {
					"serverName": {
						"value": "[uniqueString('sql', resourceGroup().id)]",
						"metadata": {
							"description": "The name of the SQL logical server."
						}
					},
					"sqlDBName": {
						"value": "SampleDB",
						"metadata": {
							"description": "The name of the SQL Database."
						}
					},
					"location": {
						"value": "[resourceGroup().location]",
						"metadata": {
							"description": "Location for all resources."
						}
					},
					"administratorLogin": {
						"value": "dbadmin"
					},
					"administratorLoginPassword": {
						"value": "[parameters('dbAdminPassword')]",
						"metadata": {
							"description": "The administrator password of the SQL logical server."
						}
					}
				}
			}
		},
		{
			"comments": "This deployment links to the private_link.json nested ARM template",
			"name": "linkedTemplate-sqldb-private-link",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2020-06-01",
			"dependsOn": [
				"vnetcopy",
				"linkedTemplate-sqldb"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('privateLinkNestedTemplateUri')]"
				},
				"parameters": {
					"suffix": {
						"value": "[variables('suffix')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"resourceType": {
						"value": "Microsoft.Sql/servers"
					},
					"resourceName": {
						"value": "[reference(resourceId('Microsoft.Resources/deployments', 'linkedTemplate-sqldb'), '2020-07-01').outputs.sqlServerName.value]"
					},
					"groupType": {
						"value": "[variables('sqlGroupType')]"
					},
					"subnet": {
						"value": "[reference(resourceId('Microsoft.Resources/deployments', 'linkedTemplate-vnet-1')).outputs.subnetRefs.value[1].id]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the private_dns.json nested ARM template",
			"name": "linkedTemplate-sqldb-private-dns-spoke-link",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2020-06-01",
			"dependsOn": [
				"linkedTemplate-sqldb-private-link"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('privateDnsNestedTemplateUri')]"
				},
				"parameters": {
					"privateDnsZoneName": {
						"value": "[variables('sqlPrivateDnsZoneName')]"
					},
					"virtualNetworkName": {
						"value": "[reference(resourceId('Microsoft.Resources/deployments', 'linkedTemplate-vnet-1')).outputs.vnetName.value]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the private_dns.json nested ARM template",
			"name": "linkedTemplate-sqldb-private-dns-hub-link",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2020-06-01",
			"dependsOn": [
				"linkedTemplate-sqldb-private-link",
				"linkedTemplate-sqldb-private-dns-spoke-link"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('privateDnsNestedTemplateUri')]"
				},
				"parameters": {
					"privateDnsZoneName": {
						"value": "[variables('sqlPrivateDnsZoneName')]"
					},
					"virtualNetworkName": {
						"value": "[reference(resourceId('Microsoft.Resources/deployments', 'linkedTemplate-vnet-0')).outputs.vnetName.value]"
					}
				}
			}
		},
		{
			"comments": "This deployment links to the private_link_ipconfig.json nested ARM template",
			"name": "linkedTemplate-sqldb-private-link-ipconfigs",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2020-06-01",
			"dependsOn": [
				"linkedTemplate-sqldb-private-dns-hub-link"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('privateLinkIpConfigsNestedTemplateUri')]"
				},
				"parameters": {
					"privateDnsZoneName": {
						"value": "[variables('sqlPrivateDnsZoneName')]"
					},
					"privateLinkNicResource": {
						"value": "[reference(resourceId('Microsoft.Resources/deployments', 'linkedTemplate-sqldb-private-link')).outputs.privateLinkNicResource.value]"
					},
					"privateDnsRecordTemplateUri": {
						"value": "[variables('privateDnsRecordNestedTemplateUri')]"
					},
					"privateLinkNicIpConfigTemplateUri": {
						"value": "[variables('privateLinkIpConfigsHelperNestedTemplateUri')]"
					}
				}
			}
		}
	],
	"outputs": {
		"firewallPublicIpAddress": {
			"type": "string",
			"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-firewall').outputs.firewallPublicIpAddress.value]"
		},
		"aksClusterPrivateDnsHostName": {
			"type": "string",
			"value": "[reference('Microsoft.Resources/deployments/linkedTemplate-aks').outputs.aksControlPlanePrivateFQDN.value]"
		}
	}
}