{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "suffix": {
            "type": "string"
        },
        "apimSku": {
            "type": "object",
            "defaultValue": {
                "name": "Developer",
                "capacity": 1
            }
        },
        "subnetId": {
            "type": "string"
        }
    },
    "variables": {
        "apiMgmtname": "[concat('api-mgmt-', parameters('suffix'))]"   
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2018-06-01-preview",
            "name": "[variables('apiMgmtName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "sku": "[parameters('apimSku')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publisherEmail": "cbellee@microsoft.com",
                "publisherName": "KainiIndustries",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[parameters('subnetId')]"
                },
                "virtualNetworkType": "External"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/external-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "displayName": "External API",
                "apiRevision": "1",
                "subscriptionRequired": false,
                //"serviceUrl": "[concat('https://', parameters('gatewayHostName'), '/external/testapi')]",
                "path": "external/testapi",
                "protocols": [
                    "https"
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/internal-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "displayName": "Internal API",
                "apiRevision": "1",
                "subscriptionRequired": false,
                //"serviceUrl": "[concat('https://', parameters('gatewayHostName'), '/internal/testapi')]",
                "path": "internal/testapi",
                "protocols": [
                    "https"
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/external-api/external-test-call')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiMgmtName'), 'external-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "displayName": "external test call",
                "method": "GET",
                "urlTemplate": "/test",
                "templateParameters": [],
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [
                            {
                                "contentType": "application/json",
                                "sample": "[concat('{\"apiType\":\"external\",\"apimName\":\"', variables('apiMgmtname'), '\"}')]"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/internal-api/internal-test-call')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiMgmtName'), 'internal-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "displayName": "internal test call",
                "method": "GET",
                "urlTemplate": "/test",
                "templateParameters": [],
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [
                            {
                                "contentType": "application/json",
                                "sample": "[concat('{\"apiType\":\"internal\",\"apimName\":\"', variables('apiMgmtname'), '\"}')]"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/external-api/external-test-call/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apiMgmtName'), 'external-api', 'external-test-call')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiMgmtName'), 'external-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "policyContent": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <mock-response status-code=\"200\" content-type=\"application/json\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "contentFormat": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(variables('apiMgmtName'), '/internal-api/internal-test-call/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', variables('apiMgmtName'), 'internal-api', 'internal-test-call')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apiMgmtName'), 'internal-api')]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apiMgmtName'))]"
            ],
            "properties": {
                "policyContent": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <mock-response status-code=\"200\" content-type=\"application/json\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "contentFormat": "xml"
            }
        }
    ],
    "outputs": {
        "apimPublicIpAddress": {
            "type": "string",
            "value": "[reference(variables('apiMgmtName')).publicIPAddresses[0]]"
        },
        "apimDnsName": {
            "type": "string",
            "value": "[replace(reference(variables('apiMgmtName')).gatewayUrl, 'https://', '')]"
        }
    }
}