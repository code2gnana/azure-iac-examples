{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"administratorLogin": {
			"type": "string"
		},
		"administratorLoginPassword": {
			"type": "securestring"
		},
		"location": {
			"type": "string"
		},
		"serverName": {
			"type": "string"
		},
		"serverEdition": {
			"type": "string"
		},
		"vCores": {
			"type": "int",
			"defaultValue": 4
		},
		"storageSizeMB": {
			"type": "int"
		},
		"haEnabled": {
			"type": "string",
			"defaultValue": "Disabled"
		},
		"availabilityZone": {
			"type": "string"
		},
		"version": {
			"type": "string"
		},
		"subnetArmResourceId": {
			"type": "string"
		},
		"tags": {
			"type": "object",
			"defaultValue": {}
		},
		"firewallRules": {
			"type": "object",
			"defaultValue": {}
		},
		"backupRetentionDays": {
			"type": "int"
		},
		"geoRedundantBackup": {
			"type": "string"
		},
		"vmName": {
			"type": "string",
			"defaultValue": "Standard_B1ms"
		},
		"publicNetworkAccess": {
			"type": "string",
			"metadata": {
				"description": "Value should be either Enabled or Disabled"
			}
		},
		"storageIops": {
			"type": "int"
		},
/* 		"vnetData": {
			"type": "object",
			"metadata": {
				"description": "Vnet data is an object which contains all parameters pertaining to vnet and subnet"
			},
			"defaultValue": {
				"virtualNetworkName": "testVnet",
				"subnetName": "testSubnet",
				"virtualNetworkAddressPrefix": "10.0.0.0/16",
				"virtualNetworkResourceGroupName": "[resourceGroup().name]",
				"location": "eastus2",
				"subscriptionId": "[subscription().subscriptionId]",
				"subnetProperties": {},
				"delegatedSubnetArguments": {},
				"isNewVnet": false,
				"subnetNeedsUpdate": false
			}
		}, */
		"networkResourcesDeploymentName": {
			"type": "string"
		}
	},
	"variables": {
		"api": "2020-07-01-privatepreview",
		"firewallRules": "[parameters('firewallRules').rules]"
	},
	"resources": [
/* 		{
			"condition": "[or(parameters('vnetData').isNewVnet, parameters('vnetData').subnetNeedsUpdate)]",
			"type": "Microsoft.Resources/deployments",
			"name": "[parameters('networkResourcesDeploymentName')]",
			"apiVersion": "2020-06-01",
			"resourceGroup": "[parameters('vnetData').virtualNetworkResourceGroupName]",
			"subscriptionId": "[parameters('vnetData').subscriptionId]",
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {},
					"variables": {},
					"resources": [
						{
							"condition": "[parameters('vnetData').subnetNeedsUpdate]",
							"type": "Microsoft.Network/virtualNetworks/subnets",
							"name": "[concat(parameters('vnetData').virtualNetworkName, '/', parameters('vnetData').subnetName)]",
							"apiVersion": "2020-05-01",
							"properties": "[parameters('vnetData').subnetProperties]"
						},
						{
							"condition": "[parameters('vnetData').isNewVnet]",
							"type": "Microsoft.Network/virtualNetworks",
							"name": "[parameters('vnetData').virtualNetworkName]",
							"apiVersion": "2020-05-01",
							"location": "[parameters('vnetData').location]",
							"tags": "[parameters('tags')]",
							"properties": {
								"addressSpace": {
									"addressPrefixes": [
										"[parameters('vnetData').virtualNetworkAddressPrefix]"
									]
								},
								"subnets": [
									{
										"name": "[parameters('vnetData').subnetName]",
										"properties": "[parameters('vnetData').subnetProperties]"
									}
								]
							}
						}
					]
				}
			}
		}, */
		{
			"apiVersion": "[variables('api')]",
			"location": "[parameters('location')]",
			"name": "[parameters('serverName')]",
			"dependsOn": [
				"[parameters('networkResourcesDeploymentName')]"
			],
			"properties": {
				"version": "[parameters('version')]",
				"administratorLogin": "[parameters('administratorLogin')]",
				"administratorLoginPassword": "[parameters('administratorLoginPassword')]",
				"publicNetworkAccess": "[parameters('publicNetworkAccess')]",
				"DelegatedSubnetArguments": { "subnetArmResourceId": "[parameters('subnetArmResourceId')]" }, //"[if(empty(parameters('vnetData').delegatedSubnetArguments), json('null'), parameters('vnetData').delegatedSubnetArguments)]",
				"haEnabled": "[parameters('haEnabled')]",
				"storageProfile": {
					"storageMB": "[parameters('storageSizeMB')]",
					"backupRetentionDays": "[parameters('backupRetentionDays')]",
					"geoRedundantBackup": "[parameters('geoRedundantBackup')]",
					"storageIops": "[parameters('storageIops')]"
				},
				"availabilityZone": "[parameters('availabilityZone')]"
			},
			"sku": {
				"name": "[parameters('vmName')]",
				"tier": "[parameters('serverEdition')]",
				"capacity": "[parameters('vCores')]"
			},
			"tags": "[parameters('tags')]",
			"type": "Microsoft.DBforMySQL/flexibleServers"
		},
		/* {
			"condition": "[greater(length(variables('firewallRules')), 0)]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-08-01",
			"name": "[concat('firewallRules-', copyIndex())]",
			"copy": {
				"count": "[if(greater(length(variables('firewallRules')), 0), length(variables('firewallRules')), 1)]",
				"mode": "Serial",
				"name": "firewallRulesIterator"
			},
			"dependsOn": [
				"[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('serverName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": [
						{
							"type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
							"name": "[concat(parameters('serverName'),'/',variables('firewallRules')[copyIndex()].name)]",
							"apiVersion": "[variables('api')]",
							"properties": {
								"StartIpAddress": "[variables('firewallRules')[copyIndex()].startIPAddress]",
								"EndIpAddress": "[variables('firewallRules')[copyIndex()].endIPAddress]"
							}
						}
					]
				}
			}
		} */
	]
}
