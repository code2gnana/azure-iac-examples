{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "pfxCertificate": {
      "type": "string"
    },
    "pfxCertificatePassword": {
      "type": "string"
    },
    "adminUserObjectId": {
      "type": "string"
    },
    "containerPort": {
      "type": "string"
    },
    "containerImageName": {
      "type": "string"
    },
    "dnsZoneName": {
      "type": "string"
    },
    "hostName": {
      "type": "string"
    },
    "appServicePlanSku": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "namingPrefix": "[format('{0}-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]",
      "name": "appGwyUserManagedId"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployAppService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerPort": {
            "value": "[parameters('containerPort')]"
          },
          "prefix": {
            "value": "[variables('namingPrefix')]"
          },
          "containerImageName": {
            "value": "[parameters('containerImageName')]"
          },
          "sku": {
            "value": "[parameters('appServicePlanSku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "webAppName": {
              "type": "string",
              "defaultValue": "[concat(parameters('prefix'), uniqueString(resourceGroup().id))]"
            },
            "sku": {
              "type": "string",
              "defaultValue": "P1V2"
            },
            "containerImageName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "containerPort": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "appServicePlanName": "[toLower(format('{0}-asp', parameters('prefix')))]",
            "webSiteName": "[toLower(format('{0}-app', parameters('prefix')))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "linux",
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[variables('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                  "linuxFxVersion": "[concat('DOCKER|', parameters('containerImageName'))]",
                  "appSettings": [
                    {
                      "name": "WEBSITES_PORT",
                      "value": "[parameters('containerPort')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            }
          ],
          "outputs": {
            "webAppHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('webSiteName'))).hostNames[0]]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployKeyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUserObjectId": {
            "value": "[parameters('adminUserObjectId')]"
          },
          "certificateData": {
            "value": "[parameters('pfxCertificate')]"
          },
          "userAssignedManagedIdentity": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'appGwyUserManagedId'), '2018-11-30', 'full')]"
          },
          "prefix": {
            "value": "[variables('namingPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "userAssignedManagedIdentity": {
              "type": "object"
            },
            "certificateData": {
              "type": "string"
            },
            "adminUserObjectId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "keyVaultName": "[format('{0}-kv', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "location": "[resourceGroup().location]",
              "name": "[variables('keyVaultName')]",
              "properties": {
                "enableSoftDelete": true,
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                  {
                    "objectId": "[parameters('userAssignedManagedIdentity').properties.principalId]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                      "secrets": [
                        "set",
                        "list",
                        "get"
                      ]
                    }
                  },
                  {
                    "objectId": "[parameters('adminUserObjectId')]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                      "secrets": [
                        "all"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}-ssl-cert', variables('keyVaultName'), parameters('prefix'))]",
              "properties": {
                "value": "[parameters('certificateData')]",
                "attributes": {
                  "enabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))).vaultUri]"
            },
            "keyVaultName": {
              "type": "string",
              "value": "[variables('keyVaultName')]"
            },
            "secretUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}-ssl-cert', variables('keyVaultName'), parameters('prefix')), '/')[0], split(format('{0}/{1}-ssl-cert', variables('keyVaultName'), parameters('prefix')), '/')[1])).secretUriWithVersion]"
            },
            "secretId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}-ssl-cert', variables('keyVaultName'), parameters('prefix')), '/')[0], split(format('{0}/{1}-ssl-cert', variables('keyVaultName'), parameters('prefix')), '/')[1])]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'appGwyUserManagedId')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "appGwyDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "userAssignedManagedIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'appGwyUserManagedId')]"
          },
          "prefix": {
            "value": "[variables('namingPrefix')]"
          },
          "gatewaySku": {
            "value": "WAF_v2"
          },
          "webAppHostName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployAppService'), '2019-10-01').outputs.webAppHostName.value]"
          },
          "pfxCertSecretId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployKeyVault'), '2019-10-01').outputs.secretUri.value]"
          },
          "pfxCertPassword": {
            "value": "[parameters('pfxCertificatePassword')]"
          },
          "probePath": {
            "value": "/blockchain"
          },
          "frontEndHostName": {
            "value": "[format('{0}.{1}', parameters('hostName'), parameters('dnsZoneName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "frontEndHostName": {
              "type": "string"
            },
            "userAssignedManagedIdentityId": {
              "type": "string"
            },
            "webAppHostName": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "[format('{0}-vnet', parameters('prefix'))]"
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16"
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet"
            },
            "subnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/24"
            },
            "applicationGatewayName": {
              "type": "string",
              "defaultValue": "[format('{0}-appgwy', parameters('prefix'))]"
            },
            "minCapacity": {
              "type": "int",
              "defaultValue": 2
            },
            "maxCapacity": {
              "type": "int",
              "defaultValue": 10
            },
            "frontendHttpsPort": {
              "type": "int",
              "defaultValue": 443
            },
            "backendHttpsPort": {
              "type": "int",
              "defaultValue": 443
            },
            "pfxCertSecretId": {
              "type": "string"
            },
            "pfxCertPassword": {
              "type": "string"
            },
            "probePath": {
              "type": "string"
            },
            "gatewaySku": {
              "type": "string",
              "allowedValues": [
                "Standard_v2",
                "WAF_v2"
              ]
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "cookieBasedAffinity": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "backendAddresses": {
              "type": "array",
              "defaultValue": [
                {
                  "fqdn": "[parameters('webAppHostName')]"
                }
              ]
            }
          },
          "functions": [],
          "variables": {
            "appGwPublicIpName": "[format('{0}-pip', parameters('applicationGatewayName'))]",
            "certName": "app-ssl-cert"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetPrefix')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('appGwPublicIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2020-06-01",
              "name": "[parameters('applicationGatewayName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('userAssignedManagedIdentityId')]": {}
                }
              },
              "properties": {
                "sku": {
                  "name": "[parameters('gatewaySku')]",
                  "tier": "[parameters('gatewaySku')]"
                },
                "autoscaleConfiguration": {
                  "minCapacity": "[parameters('minCapacity')]",
                  "maxCapacity": "[parameters('maxCapacity')]"
                },
                "sslCertificates": [
                  {
                    "name": "[variables('certName')]",
                    "properties": {
                      "keyVaultSecretId": "[parameters('pfxCertSecretId')]"
                    }
                  }
                ],
                "gatewayIPConfigurations": [
                  {
                    "name": "ipConfig",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "frontendIp",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "frontendHttpsPort",
                    "properties": {
                      "port": "[parameters('frontendHttpsPort')]"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "backendPool",
                    "properties": {
                      "backendAddresses": "[parameters('backendAddresses')]"
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "appServiceProbe",
                    "properties": {
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "path": "[parameters('probePath')]",
                      "pickHostNameFromBackendHttpSettings": true,
                      "protocol": "Https",
                      "match": {
                        "statusCodes": [
                          "200-399"
                        ]
                      }
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "backendHttpsSettings",
                    "properties": {
                      "port": "[parameters('backendHttpsPort')]",
                      "protocol": "Https",
                      "cookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                      "pickHostNameFromBackendAddress": true,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', parameters('applicationGatewayName'), 'appServiceProbe')]"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "multiSiteListener",
                    "properties": {
                      "hostName": "[parameters('frontEndHostName')]",
                      "requireServerNameIndication": true,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGatewayName'), 'frontendIp')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGatewayName'), 'frontendHttpsPort')]"
                      },
                      "protocol": "Https",
                      "sslCertificate": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', parameters('applicationGatewayName'), variables('certName'))]"
                      }
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "https_rule",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGatewayName'), 'multiSiteListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGatewayName'), 'backendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGatewayName'), 'backendHttpsSettings')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            }
          ],
          "outputs": {
            "AppGatewayFrontEndIpAddressId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
            },
            "AppGatewayFrontEndIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))).ipAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployAppService')]",
        "[resourceId('Microsoft.Resources/deployments', 'deployKeyVault')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'appGwyUserManagedId')]"
      ]
    }
  ],
  "outputs": {
    "AppGatewayFrontEndIpAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGwyDeploy'), '2019-10-01').outputs.AppGatewayFrontEndIpAddress.value]"
    }
  },
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "1157730848838906851"
    }
  }
}