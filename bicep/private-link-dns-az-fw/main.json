{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "localGatewayIpAddress": {
      "type": "string"
    },
    "vpnSharedSecret": {
      "type": "string"
    },
    "sshKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCKEnblRrHUsUf2zEhDC4YrXVDTf6Vj3eZhfIT22og0zo2hdpfUizcDZ+i0J4Bieh9zkcsGMZtMkBseMVVa5tLSNi7sAg79a8Bap5RmxMDgx53ZCrJtTC3Li4e/3xwoCjnl5ulvHs6u863G84o8zgFqLgedKHBmJxsdPw5ykLSmQ4K6Qk7VVll6YdSab7R6NIwW5dX7aP2paD8KRUqcZ1xlArNhHiUT3bWaFNRRUOsFLCxk2xyoXeu+kC9HM2lAztIbUkBQ+xFYIPts8yPJggb4WF6Iz0uENJ25lUGen4svy39ZkqcK0ZfgsKZpaJf/+0wUbjqW2tlAMczbTRsKr8r cbellee@CB-SBOOK-1809"
    },
    "availabilityZones": {
      "type": "array",
      "defaultValue": [
        "1",
        "2",
        "3"
      ]
    },
    "hubVnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "hubSubnets": {
      "type": "array",
      "defaultValue": [
        {
          "name": "GatewaySubnet",
          "addressPrefix": "10.0.0.0/24"
        },
        {
          "name": "AzureFirewallSubnet",
          "addressPrefix": "10.0.1.0/24"
        },
        {
          "name": "InfraSubnet",
          "addressPrefix": "10.0.2.0/24"
        },
        {
          "name": "PrivateEndpointSubnet",
          "addressPrefix": "10.0.3.0/24"
        }
      ]
    },
    "spokeVnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16"
    },
    "spokeSubnets": {
      "type": "array",
      "defaultValue": [
        {
          "name": "AKSSubnet",
          "addressPrefix": "10.1.0.0/24"
        },
        {
          "name": "DataSubnet",
          "addressPrefix": "10.1.1.0/24"
        }
      ]
    },
    "sqlAdminPassword": {
      "type": "string",
      "defaultValue": "M1cr0soft"
    },
    "kvAdminUserObjectId": {
      "type": "string",
      "defaultValue": "57963f10-818b-406d-a2f6-6e758d86e259"
    }
  },
  "functions": [],
  "variables": {
    "namingPrefix": "[format('{0}-{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "hubVnetName": "[format('hub-vnet-{0}', variables('namingPrefix'))]",
    "spokeVnetName": "[format('spoke-vnet-{0}', variables('namingPrefix'))]",
    "azFirewallName": "[format('az-fw-{0}', variables('namingPrefix'))]",
    "azFirewallPublicIpName": "[format('az-fw-pip-{0}', variables('namingPrefix'))]",
    "vpnGatewayName": "[format('vpn-gw-{0}', variables('namingPrefix'))]",
    "gwyPublicIpAddressName": "[format('vpn-gw-pip-{0}', variables('namingPrefix'))]",
    "storageAccountName": "[format('stor{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "sqlPrivateDNSZoneName": "privatelink.database.windows.net",
    "blobPrivateDNSZoneName": "privatelink.blob.core.windows.net",
    "kvPrivateDNSZoneName": "privatelink.vaultcore.azure.net",
    "sqlServerName": "[format('sql-server-{0}', variables('namingPrefix'))]",
    "sqlAdminLogin": "dbadmin",
    "sqlDbName": "AdventureWorksLT",
    "keyVaultName": "[format('kv{0}{1}', parameters('prefix'), uniqueString(resourceGroup().id))]",
    "azFirewallPolicyName": "azFirewallPolicy1"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('azFirewallPublicIpName')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2",
        "3"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/ipGroups",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "privateIpGroup",
      "properties": {
        "ipAddresses": [
          "10.0.0.0/16",
          "10.1.0.0/16",
          "192.168.88.0/24"
        ]
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2020-05-01",
      "name": "[variables('azFirewallPolicyName')]",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "dnsSettings": {
          "enableProxy": true
        }
      }
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('azFirewallName')]",
      "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
      "properties": {
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('azFirewallPolicyName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value, reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.subnetArray.value[1].name)]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('azFirewallPublicIpName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', variables('azFirewallPolicyName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('azFirewallPublicIpName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/network-rule-group-1', variables('azFirewallPolicyName'))]",
      "properties": {
        "priority": 1000,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "network-rule-1",
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "name": "allow_all_local_subnets",
                "ruleType": "NetworkRule",
                "description": "allow_all_local_subnets",
                "sourceIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', 'privateIpGroup')]"
                ],
                "destinationIpGroups": [
                  "[resourceId('Microsoft.Network/ipGroups', 'privateIpGroup')]"
                ],
                "destinationPorts": [
                  "*"
                ],
                "ipProtocols": [
                  "Any"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', variables('azFirewallPolicyName'))]",
        "[resourceId('Microsoft.Network/ipGroups', 'privateIpGroup')]"
      ]
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2020-11-01",
      "name": "localGateway",
      "location": "[resourceGroup().location]",
      "properties": {
        "gatewayIpAddress": "[parameters('localGatewayIpAddress')]",
        "localNetworkAddressSpace": {
          "addressPrefixes": [
            "192.168.88.0/24"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('gwyPublicIpAddressName')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1",
        "2",
        "3"
      ],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('vpnGatewayName')]",
      "properties": {
        "gatewayType": "Vpn",
        "sku": {
          "name": "VpnGw2AZ",
          "tier": "VpnGw2AZ"
        },
        "vpnGatewayGeneration": "Generation2",
        "vpnType": "RouteBased",
        "ipConfigurations": [
          {
            "name": "gwyipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('gwyPublicIpAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value, reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.subnetArray.value[0].name)]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gwyPublicIpAddressName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/connections",
      "apiVersion": "2020-11-01",
      "name": "s2scxn",
      "location": "[resourceGroup().location]",
      "properties": {
        "connectionType": "IPsec",
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGatewayName'))]",
          "properties": {}
        },
        "sharedKey": "[parameters('vpnSharedSecret')]",
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', 'localGateway')]",
          "properties": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/localNetworkGateways', 'localGateway')]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vpnGatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": true,
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "defaultAction": "Deny"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "blobPrivateEndpoint",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value, reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.subnetArray.value[3].name)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "blobStorageConnection",
            "properties": {
              "groupIds": [
                "Blob"
              ],
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('keyVaultName')]",
      "properties": {
        "enableSoftDelete": true,
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "objectId": "[parameters('kvAdminUserObjectId')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": [
                "all"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "kvPrivateEndpoint",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value, reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.subnetArray.value[3].name)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "kvConnection",
            "properties": {
              "groupIds": [
                "Vault"
              ],
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "location": "global",
      "name": "[variables('kvPrivateDNSZoneName')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "location": "global",
      "name": "[variables('blobPrivateDNSZoneName')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "location": "global",
      "name": "[variables('sqlPrivateDNSZoneName')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-11-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[variables('sqlServerName')]",
      "properties": {
        "administratorLogin": "[variables('sqlAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-11-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDbName'))]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "sampleName": "AdventureWorksLT"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "name": "sqlPrivateEndpoint",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value, reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.subnetArray.value[3].name)]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "sqlConnection",
            "properties": {
              "groupIds": [
                "sqlServer"
              ],
              "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}-link', variables('kvPrivateDNSZoneName'), variables('kvPrivateDNSZoneName'))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.id.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('kvPrivateDNSZoneName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}-link', variables('blobPrivateDNSZoneName'), variables('blobPrivateDNSZoneName'))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.id.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDNSZoneName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}-link', variables('sqlPrivateDNSZoneName'), variables('sqlPrivateDNSZoneName'))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.id.value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('sqlPrivateDNSZoneName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('kvPrivateDNSZoneName'), variables('keyVaultName'))]",
      "properties": {
        "ttl": 3600,
        "aRecords": [
          {
            "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', 'kvPrivateEndpoint')).customDnsConfigs[0].ipAddresses[0]]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', 'kvPrivateEndpoint')]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('kvPrivateDNSZoneName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('blobPrivateDNSZoneName'), variables('storageAccountName'))]",
      "properties": {
        "ttl": 3600,
        "aRecords": [
          {
            "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', 'blobPrivateEndpoint')).customDnsConfigs[0].ipAddresses[0]]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', 'blobPrivateEndpoint')]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDNSZoneName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('sqlPrivateDNSZoneName'), variables('sqlServerName'))]",
      "properties": {
        "ttl": 3600,
        "aRecords": [
          {
            "ipv4Address": "[reference(resourceId('Microsoft.Network/privateEndpoints', 'sqlPrivateEndpoint')).customDnsConfigs[0].ipAddresses[0]]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', 'sqlPrivateEndpoint')]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('sqlPrivateDNSZoneName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('hubVnetName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('hubVnetName')]"
          },
          "subnets": {
            "value": "[parameters('hubSubnets')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('hubVnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetAddressPrefix": {
              "type": "string"
            },
            "subnets": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('vnetName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('subnets'))]",
                    "input": {
                      "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
                        "privateEndpointNetworkPolicies": "Disabled"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "subnetArray": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[variables('spokeVnetName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('spokeVnetName')]"
          },
          "subnets": {
            "value": "[parameters('spokeSubnets')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('spokeVnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "vnetAddressPrefix": {
              "type": "string"
            },
            "subnets": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('vnetName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('subnets'))]",
                    "input": {
                      "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
                        "privateEndpointNetworkPolicies": "Disabled"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "subnetArray": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnetpeering",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "localVnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.id.value]"
          },
          "localVnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('hubVnetName')), '2019-10-01').outputs.vnetName.value]"
          },
          "localVnetFriendlyName": {
            "value": "hub-vnet"
          },
          "remoteVnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('spokeVnetName')), '2019-10-01').outputs.id.value]"
          },
          "remoteVnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('spokeVnetName')), '2019-10-01').outputs.vnetName.value]"
          },
          "remoteVnetFriendlyName": {
            "value": "spoke-vnet"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "localVnetName": {
              "type": "string"
            },
            "localVnetId": {
              "type": "string"
            },
            "localVnetFriendlyName": {
              "type": "string"
            },
            "remoteVnetName": {
              "type": "string"
            },
            "remoteVnetId": {
              "type": "string"
            },
            "remoteVnetFriendlyName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/peering-to-{1}', parameters('localVnetName'), parameters('remoteVnetFriendlyName'))]",
              "properties": {
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "allowVirtualNetworkAccess": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('remoteVnetId')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/peering-to-{1}', parameters('remoteVnetName'), parameters('localVnetFriendlyName'))]",
              "properties": {
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "allowVirtualNetworkAccess": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[parameters('localVnetId')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('hubVnetName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('spokeVnetName'))]"
      ]
    }
  ],
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "1128693602900243069"
    }
  }
}