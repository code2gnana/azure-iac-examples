{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.821.5551",
      "templateHash": "14333307514559562491"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "string"
    },
    "vmssInstanceCount": {
      "type": "int"
    },
    "pfxCert": {
      "type": "string"
    },
    "pfxCertPassword": {
      "type": "string"
    },
    "appGwyHostName": {
      "type": "string"
    },
    "sshPublicKey": {
      "type": "string"
    },
    "vmssCustomScriptUri": {
      "type": "string"
    },
    "dnsResourceGroupName": {
      "type": "string",
      "defaultValue": "external-dns-zones-rg"
    },
    "dnsZoneName": {
      "type": "string",
      "defaultValue": "kainiindustries.net"
    },
    "dnsARecordName": {
      "type": "string",
      "defaultValue": "myapp"
    },
    "forceUpdateTag": {
      "type": "int"
    },
    "storageAccountName": {
      "type": "string"
    },
    "domainNameLabel": {
      "type": "string",
      "defaultValue": "ddos-proxy"
    },
    "albBackendPoolName": {
      "type": "string",
      "defaultValue": "alb-backend-pool"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "costcentre": "1234567890",
        "environment": "dev"
      }
    }
  },
  "functions": [],
  "variables": {
    "prefix": "[uniqueString(resourceGroup().id)]",
    "vnetName": "[format('{0}-vnet', variables('prefix'))]",
    "natGatewayName": "[format('{0}-natgw', variables('prefix'))]",
    "natGatewayPublicIPAddressName": "[format('{0}-natgw-pip', variables('prefix'))]",
    "appGatewayNsgName": "[format('{0}-appgwy-nsg', variables('prefix'))]",
    "loadBalancerName": "[format('{0}-alb', variables('prefix'))]",
    "albPublicIpAddressName": "[format('{0}-vmss-alb-pip', variables('prefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "nsgDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appGatewayPublicIpAddress": {
            "value": "1.1.1.1"
          },
          "appGatewayNsgName": {
            "value": "[variables('appGatewayNsgName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "2282639038744888201"
            }
          },
          "parameters": {
            "appGatewayNsgName": {
              "type": "string"
            },
            "appGatewayPublicIpAddress": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('appGatewayNsgName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "appgwy-v1",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65503-65534",
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "appgwy-v2",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1010,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "appgwy-inbound-internet",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "Tcp",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationPortRange": "",
                      "destinationPortRanges": [
                        "443"
                      ],
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1020,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "nsgs": {
              "type": "array",
              "value": "[concat(array(resourceId('Microsoft.Network/networkSecurityGroups', parameters('appGatewayNsgName'))))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "natGatewayDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "natGatewayName": {
            "value": "[variables('natGatewayName')]"
          },
          "publicIpAddressName": {
            "value": "[variables('natGatewayPublicIPAddressName')]"
          },
          "domainNameLabel": {
            "value": "[parameters('domainNameLabel')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "17167047982168077029"
            }
          },
          "parameters": {
            "natGatewayName": {
              "type": "string"
            },
            "publicIpAddressName": {
              "type": "string"
            },
            "domainNameLabel": {
              "type": "string",
              "defaultValue": "natgwy-ddos-proxy"
            },
            "enableDdosProtection": {
              "type": "bool",
              "defaultValue": false
            },
            "idleTimeoutInMinutes": {
              "type": "int",
              "defaultValue": 60
            },
            "tags": {
              "type": "object"
            },
            "ddosProtectionCoverage": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard"
              ]
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[parameters('publicIpAddressName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "tags": "[parameters('tags')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('domainNameLabel')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2020-06-01",
              "name": "[parameters('natGatewayName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "tags": "[parameters('tags')]",
              "properties": {
                "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
              ]
            }
          ],
          "outputs": {
            "natGatewayResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/natGateways', parameters('natGatewayName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnetDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "subnetArray": {
            "value": [
              {
                "name": "AppGatewaySubnet",
                "properties": {
                  "addressPrefix": "10.0.0.0/24",
                  "networkSecurityGroup": {
                    "id": "[reference(resourceId('Microsoft.Resources/deployments', 'nsgDeployment'), '2019-10-01').outputs.nsgs.value[0].id]"
                  }
                }
              },
              {
                "name": "VmssSubnet",
                "properties": {
                  "addressPrefix": "10.0.1.0/24",
                  "natGateway": {
                    "id": "[reference(resourceId('Microsoft.Resources/deployments', 'natGatewayDeployment'), '2019-10-01').outputs.natGatewayResourceId.value]"
                  }
                }
              },
              {
                "name": "AzureBastionSubnet",
                "properties": {
                  "addressPrefix": "10.0.2.0/24"
                }
              }
            ]
          },
          "vnetAddressPrefixes": {
            "value": [
              "10.0.0.0/16"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "16933588205475642622"
            }
          },
          "parameters": {
            "vnetAddressPrefixes": {
              "type": "array"
            },
            "subnetArray": {
              "type": "array"
            },
            "vnetName": {
              "type": "string"
            },
            "enableDdosProtection": {
              "type": "bool",
              "defaultValue": false
            },
            "enableVmProtection": {
              "type": "bool",
              "defaultValue": false
            },
            "ddosProctectionPlanResourceId": {
              "type": "string",
              "defaultValue": ""
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [
                "168.63.129.16"
              ]
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('vnetName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('vnetAddressPrefixes')]"
                },
                "enableDdosProtection": "[parameters('enableDdosProtection')]",
                "enableVmProtection": "[parameters('enableVmProtection')]",
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "subnets": "[parameters('subnetArray')]"
              }
            }
          ],
          "outputs": {
            "subnetList": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('subnetArray'))]",
                "input": {
                  "name": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[copyIndex()].name]",
                  "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))).subnets[copyIndex()].id]"
                }
              }
            },
            "vnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'natGatewayDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'nsgDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "bastionDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeployment'), '2019-10-01').outputs.subnetList.value[2].id]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "12960762742826773545"
            }
          },
          "parameters": {
            "subnetId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "bastionName": "[format('{0}-bas', uniqueString(resourceGroup().id))]",
            "bastionVipName": "[format('{0}-bas-vip', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[variables('bastionVipName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-02-01",
              "name": "[variables('bastionName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionVipName'))]"
                      },
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionVipName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "appGwyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "probePath": {
            "value": "/"
          },
          "gatewaySku": {
            "value": "WAF_v2"
          },
          "pfxCert": {
            "value": "[parameters('pfxCert')]"
          },
          "pfxCertPassword": {
            "value": "[parameters('pfxCertPassword')]"
          },
          "frontEndHostName": {
            "value": "[parameters('appGwyHostName')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeployment'), '2019-10-01').outputs.subnetList.value[0].id]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "1285506411737571192"
            }
          },
          "parameters": {
            "frontEndHostName": {
              "type": "string"
            },
            "minCapacity": {
              "type": "int",
              "defaultValue": 2
            },
            "maxCapacity": {
              "type": "int",
              "defaultValue": 10
            },
            "frontendPort": {
              "type": "int",
              "defaultValue": 443
            },
            "backendPort": {
              "type": "int",
              "defaultValue": 3000
            },
            "pfxCert": {
              "type": "string"
            },
            "pfxCertPassword": {
              "type": "string"
            },
            "probePath": {
              "type": "string",
              "defaultValue": "/"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "gatewaySku": {
              "type": "string",
              "allowedValues": [
                "Standard_v2",
                "WAF_v2"
              ]
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "cookieBasedAffinity": {
              "type": "string",
              "defaultValue": "Disabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            }
          },
          "functions": [],
          "variables": {
            "prefix": "[uniqueString(resourceGroup().id)]",
            "applicationGatewayName": "[format('{0}-appgwy', variables('prefix'))]",
            "appGwPublicIpName": "[format('{0}-pip', variables('applicationGatewayName'))]",
            "wafPolicyName": "[format('{0}-waf-policy', variables('applicationGatewayName'))]",
            "certName": "ssl-cert"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('appGwPublicIpName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2020-08-01",
              "name": "[variables('wafPolicyName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "managedRules": {
                  "exclusions": [],
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.1"
                    }
                  ]
                },
                "policySettings": {
                  "fileUploadLimitInMb": 20,
                  "maxRequestBodySizeInKb": 128,
                  "mode": "Prevention",
                  "requestBodyCheck": true,
                  "state": "Enabled"
                }
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2020-06-01",
              "name": "[variables('applicationGatewayName')]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('gatewaySku')]",
                  "tier": "[parameters('gatewaySku')]"
                },
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('wafPolicyName'))]"
                },
                "autoscaleConfiguration": {
                  "minCapacity": "[parameters('minCapacity')]",
                  "maxCapacity": "[parameters('maxCapacity')]"
                },
                "sslCertificates": [
                  {
                    "name": "[variables('certName')]",
                    "properties": {
                      "data": "[parameters('pfxCert')]",
                      "password": "[parameters('pfxCertPassword')]"
                    }
                  }
                ],
                "gatewayIPConfigurations": [
                  {
                    "name": "ipConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "frontendIp",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "frontendPort",
                    "properties": {
                      "port": "[parameters('frontendPort')]"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "backendPool"
                  }
                ],
                "probes": [
                  {
                    "name": "myAppProbe",
                    "properties": {
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "path": "[parameters('probePath')]",
                      "pickHostNameFromBackendHttpSettings": true,
                      "protocol": "Http",
                      "match": {
                        "statusCodes": [
                          "200-399"
                        ]
                      }
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "backendHttpsSettings",
                    "properties": {
                      "port": "[parameters('backendPort')]",
                      "protocol": "Http",
                      "cookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                      "pickHostNameFromBackendAddress": true,
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('applicationGatewayName'), 'myAppProbe')]"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "multiSiteListener",
                    "properties": {
                      "hostName": "[parameters('frontEndHostName')]",
                      "requireServerNameIndication": true,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('applicationGatewayName'), 'frontendIp')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('applicationGatewayName'), 'frontendPort')]"
                      },
                      "protocol": "Https",
                      "sslCertificate": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('applicationGatewayName'), variables('certName'))]"
                      }
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "https_rule",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('applicationGatewayName'), 'multiSiteListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('applicationGatewayName'), 'backendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('applicationGatewayName'), 'backendHttpsSettings')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('wafPolicyName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
              ]
            }
          ],
          "outputs": {
            "appGatewayResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]"
            },
            "appGatewayFrontEndIpAddressId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
            },
            "appGatewayFrontEndIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))).ipAddress]"
            },
            "appGatewayBeAddressPoolResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('applicationGatewayName'), 'backendPool')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "appGwyNsgUpdateDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appGatewayPublicIpAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGwyDeployment'), '2019-10-01').outputs.appGatewayFrontEndIpAddress.value]"
          },
          "appGatewayNsgName": {
            "value": "[variables('appGatewayNsgName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "2282639038744888201"
            }
          },
          "parameters": {
            "appGatewayNsgName": {
              "type": "string"
            },
            "appGatewayPublicIpAddress": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "[parameters('appGatewayNsgName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "appgwy-v1",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65503-65534",
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "appgwy-v2",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "*",
                      "destinationAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1010,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "appgwy-inbound-internet",
                    "properties": {
                      "description": "This rule is needed for application gateway probes to work",
                      "protocol": "Tcp",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationPortRange": "",
                      "destinationPortRanges": [
                        "443"
                      ],
                      "sourceAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 1020,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "nsgs": {
              "type": "array",
              "value": "[concat(array(resourceId('Microsoft.Network/networkSecurityGroups', parameters('appGatewayNsgName'))))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appGwyDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vmssLoadBalancerDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "backendPoolName": {
            "value": "[parameters('albBackendPoolName')]"
          },
          "domainNameLabel": {
            "value": "[parameters('domainNameLabel')]"
          },
          "loadBalancerName": {
            "value": "[variables('loadBalancerName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "vnetResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeployment'), '2019-10-01').outputs.vnetResourceId.value]"
          },
          "publicIpAddressName": {
            "value": "[variables('albPublicIpAddressName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "6938111209668930678"
            }
          },
          "parameters": {
            "loadBalancerName": {
              "type": "string"
            },
            "publicIpAddressName": {
              "type": "string"
            },
            "domainNameLabel": {
              "type": "string",
              "defaultValue": "alb-ddos-proxy"
            },
            "enableDdosProtection": {
              "type": "bool",
              "defaultValue": false
            },
            "idleTimeoutInMinutes": {
              "type": "int",
              "defaultValue": 60
            },
            "enableTcpReset": {
              "type": "bool",
              "defaultValue": true
            },
            "vnetResourceId": {
              "type": "string"
            },
            "backendPoolName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "ddosProtectionCoverage": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard"
              ]
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[parameters('publicIpAddressName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "zones": [
                "1",
                "2",
                "3"
              ],
              "tags": "[parameters('tags')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "ddosSettings": "[if(parameters('enableDdosProtection'), createObject('protectionCoverage', parameters('ddosProtectionCoverage')), createObject())]",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('domainNameLabel')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/loadBalancers",
              "apiVersion": "2020-06-01",
              "name": "[parameters('loadBalancerName')]",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard"
              },
              "tags": "[parameters('tags')]",
              "properties": {
                "frontendIPConfigurations": [
                  {
                    "name": "inboundIpConfiguration",
                    "zones": [
                      "1",
                      "2",
                      "3"
                    ],
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                  }
                ],
                "loadBalancingRules": [
                  {
                    "name": "smb-lb-rule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'backendAddressPools', 'backendPool-1')]"
                      },
                      "frontendPort": 445,
                      "backendPort": 445,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                      },
                      "loadDistribution": "SourceIPProtocol",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "enableTcpReset": "[parameters('enableTcpReset')]",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'probes', 'smb-lb-rule-probe')]"
                      },
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "dns-lb-rule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'backendAddressPools', 'backendPool-1')]"
                      },
                      "frontendPort": 53,
                      "backendPort": 53,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                      },
                      "loadDistribution": "SourceIPProtocol",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "enableTcpReset": "[parameters('enableTcpReset')]",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'probes', 'smb-lb-rule-probe')]"
                      },
                      "protocol": "Udp"
                    }
                  },
                  {
                    "name": "smtp-lb-rule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'backendAddressPools', 'backendPool-1')]"
                      },
                      "frontendPort": 25,
                      "backendPort": 25,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                      },
                      "loadDistribution": "SourceIPProtocol",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "enableTcpReset": "[parameters('enableTcpReset')]",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'probes', 'smb-lb-rule-probe')]"
                      },
                      "protocol": "Tcp"
                    }
                  },
                  {
                    "name": "ftp-lb-rule",
                    "properties": {
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'backendAddressPools', 'backendPool-1')]"
                      },
                      "frontendPort": 21,
                      "backendPort": 21,
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
                      },
                      "loadDistribution": "SourceIPProtocol",
                      "idleTimeoutInMinutes": "[parameters('idleTimeoutInMinutes')]",
                      "enableTcpReset": "[parameters('enableTcpReset')]",
                      "probe": {
                        "id": "[resourceId('Microsoft.Network/loadbalancers', parameters('loadBalancerName'), 'probes', 'smb-lb-rule-probe')]"
                      },
                      "protocol": "Tcp"
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "[parameters('backendPoolName')]"
                  }
                ],
                "probes": [
                  {
                    "name": "smb-lb-rule-probe",
                    "properties": {
                      "intervalInSeconds": 15,
                      "port": 445,
                      "numberOfProbes": 2,
                      "protocol": "Tcp",
                      "requestPath": "/"
                    }
                  },
                  {
                    "name": "dns-lb-rule-probe",
                    "properties": {
                      "intervalInSeconds": 15,
                      "port": 53,
                      "numberOfProbes": 2,
                      "protocol": "Tcp",
                      "requestPath": "/"
                    }
                  },
                  {
                    "name": "smtp-lb-rule-probe",
                    "properties": {
                      "intervalInSeconds": 15,
                      "port": 21,
                      "numberOfProbes": 1,
                      "protocol": "Tcp",
                      "requestPath": "/"
                    }
                  },
                  {
                    "name": "ftp-lb-rule-probe",
                    "properties": {
                      "intervalInSeconds": 15,
                      "port": 21,
                      "numberOfProbes": 1,
                      "protocol": "Tcp",
                      "requestPath": "/"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
              ]
            }
          ],
          "outputs": {
            "albBackendPoolResourceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))).backendAddressPools[0].id]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vmssDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "albBackendPoolResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vmssLoadBalancerDeployment'), '2019-10-01').outputs.albBackendPoolResourceId.value]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "appGatewayResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGwyDeployment'), '2019-10-01').outputs.appGatewayResourceId.value]"
          },
          "vmssExtensionCustomScriptUri": {
            "value": "[parameters('vmssCustomScriptUri')]"
          },
          "appGatewayBePoolResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGwyDeployment'), '2019-10-01').outputs.appGatewayBeAddressPoolResourceId.value]"
          },
          "instanceCount": {
            "value": "[parameters('vmssInstanceCount')]"
          },
          "vmssSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnetDeployment'), '2019-10-01').outputs.subnetList.value[1].id]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "1707533658889207408"
            }
          },
          "parameters": {
            "vmSku": {
              "type": "string",
              "defaultValue": "Standard_D2_v4"
            },
            "vmssSubnetId": {
              "type": "string"
            },
            "appGatewayResourceId": {
              "type": "string"
            },
            "appGatewayBePoolResourceId": {
              "type": "string"
            },
            "sshPublicKey": {
              "type": "string"
            },
            "vmssExtensionCustomScriptUri": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "storageAccountName": {
              "type": "string"
            },
            "albBackendPoolResourceId": {
              "type": "string"
            },
            "ubuntuOSVersion": {
              "type": "string",
              "defaultValue": "18.04-LTS",
              "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "16.04.0-LTS",
                "18.04-LTS"
              ],
              "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
              }
            },
            "instanceCount": {
              "type": "int",
              "maxValue": 100,
              "minValue": 1
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "variables": {
            "prefix": "[toLower(uniqueString(resourceGroup().id))]",
            "vmssName": "[format('{0}-vmss', variables('prefix'))]",
            "longprefix": "[toLower(variables('vmssName'))]",
            "publicIPAddressName": "[format('{0}-pip', variables('prefix'))]",
            "autoscaleName": "[format('{0}-apgwy-autoscale', variables('prefix'))]",
            "nicname": "[format('{0}-nic', variables('prefix'))]",
            "ipConfigName": "[format('{0}ipconfig', variables('prefix'))]",
            "imageReference": "[variables('osType')]",
            "osType": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            },
            "dataContributorRoleId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets",
              "apiVersion": "2020-06-01",
              "name": "[variables('vmssName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
              },
              "zones": [
                "1",
                "2",
                "3"
              ],
              "properties": {
                "overprovision": false,
                "upgradePolicy": {
                  "automaticOSUpgradePolicy": {
                    "enableAutomaticOSUpgrade": true
                  },
                  "mode": "Automatic",
                  "rollingUpgradePolicy": {
                    "maxBatchInstancePercent": 10
                  }
                },
                "doNotRunExtensionsOnOverprovisionedVMs": false,
                "zoneBalance": true,
                "scaleInPolicy": {
                  "rules": [
                    "OldestVM"
                  ]
                },
                "virtualMachineProfile": {
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "caching": "ReadWrite"
                    },
                    "imageReference": "[variables('imageReference')]"
                  },
                  "osProfile": {
                    "computerNamePrefix": "[variables('prefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                      "disablePasswordAuthentication": true,
                      "provisionVMAgent": true,
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "[parameters('sshPublicKey')]",
                            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]"
                          }
                        ]
                      }
                    }
                  },
                  "networkProfile": {
                    "networkInterfaceConfigurations": [
                      {
                        "name": "[variables('nicname')]",
                        "properties": {
                          "primary": true,
                          "ipConfigurations": [
                            {
                              "name": "[variables('ipConfigName')]",
                              "properties": {
                                "subnet": {
                                  "id": "[parameters('vmssSubnetId')]"
                                },
                                "applicationGatewayBackendAddressPools": [
                                  {
                                    "id": "[parameters('appGatewayBePoolResourceId')]"
                                  }
                                ],
                                "loadBalancerBackendAddressPools": [
                                  {
                                    "id": "[parameters('albBackendPoolResourceId')]"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceGroup().id, variables('vmssName'), 'StorageDataContributor')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName')), '2020-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('dataContributorRoleId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appGwyDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'vmssLoadBalancerDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnetDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vmssScriptExtensionDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "forceUpdateTag": {
            "value": "[parameters('forceUpdateTag')]"
          },
          "vmssExtensionCustomScriptUri": {
            "value": "[parameters('vmssCustomScriptUri')]"
          },
          "commandToExecute": {
            "value": "sh ./install.sh"
          },
          "extensionName": {
            "value": "vmssNginxInstallScriptExtension"
          },
          "vmssName": {
            "value": "vmssDeployment"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.821.5551",
              "templateHash": "14973460203495738676"
            }
          },
          "parameters": {
            "vmssName": {
              "type": "string"
            },
            "extensionName": {
              "type": "string",
              "defaultValue": "LinuxCustomScriptExtension"
            },
            "forceUpdateTag": {
              "type": "int"
            },
            "vmssExtensionCustomScriptUri": {
              "type": "string"
            },
            "commandToExecute": {
              "type": "string",
              "defaultValue": "sh ./install.sh"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('vmssName'), parameters('extensionName'))]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "forceUpdateTag": "[string(parameters('forceUpdateTag'))]",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "timestamp": "[parameters('forceUpdateTag')]"
                },
                "protectedSettings": {
                  "managedIdentity": {},
                  "fileUris": [
                    "[format('{0}/install.sh', parameters('vmssExtensionCustomScriptUri'))]",
                    "[format('{0}/main', parameters('vmssExtensionCustomScriptUri'))]"
                  ],
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'vmssDeployment')]"
      ]
    }
  ]
}